import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { api } from "~/utils/api";

export default function Home() {
  const mutation = api.example.askAi.useMutation();
  const [message, setMes] = useState<string>("");
  const { data: sessionData } = useSession();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex text-white">
        <div className="flex h-screen w-48 flex-col bg-slate-700">
          <div>
            <button type="button" className="w-full">
              New Chat
            </button>
          </div>
          <div className="flex-grow">
            <div>chat 1</div>
            <div>chat 2</div>
          </div>
          <div className="hw-1/12 flex justify-between px-2 py-2">
            <div>{sessionData?.user.name}</div>
            <button className="">
              <span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                  className="h-6 w-6"
                >
                  <path
                    fillRule="evenodd"
                    d="M4.5 12a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm6 0a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm6 0a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"
                    clipRule="evenodd"
                  />
                </svg>
              </span>
            </button>
          </div>
        </div>
        {/* <AuthShowcase /> */}
        <div className="flex flex-grow flex-col bg-slate-400">
          <div className="flex-grow ">Chat</div>
          <div className="w-full bg-slate-600">
            <div
              className="relative mx-auto my-4 w-3/4 rounded-2xl border-solid
            border-slate-600"
            >
              <form
                onSubmit={async (event: React.SyntheticEvent) => {
                  event.preventDefault();
                  if (mutation.error) {
                    console.log(mutation.error);
                    return;
                  }
                  mutation.mutate({ message: message });
                }}
              >
                <div className="shadow-xs relative flex w-full flex-grow flex-col rounded-xl border-0 bg-slate-500 py-[10px] md:py-4 md:pl-4">
                  <textarea
                    onChange={(event) => {
                      setMes(event.currentTarget.value);
                    }}
                    tabIndex={0}
                    rows={1}
                    className="m-0 max-h-40 w-full resize-none overflow-y-hidden
                    rounded-2xl border-0 bg-transparent p-2
                     pl-3 pr-10 align-text-top placeholder:text-slate-200
                     focus:outline-none md:pl-0 md:pr-12"
                    placeholder="Câu hỏi của bạn"
                  ></textarea>
                  <button
                    type="submit"
                    disabled={message === "" ? true : false}
                    className="absolute bottom-8 right-2 rounded-md p-1
                     text-white transition-colors enabled:bg-green-500
                      disabled:text-gray-400 
                      disabled:opacity-40 md:bottom-3 md:right-3 md:p-2"
                  >
                    <span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 16 16"
                        fill="none"
                        className="m-1 h-4 w-4 md:m-0"
                        stroke-width="2"
                      >
                        <path
                          d="M.5 1.163A1 1 0 0 1 1.97.28l12.868 6.837a1 1 0 0 1 0 1.766L1.969 15.72A1 1 0 0 1 .5 14.836V10.33a1 1 0 0 1 .816-.983L8.5 8 1.316 6.653A1 1 0 0 1 .5 5.67V1.163Z"
                          fill="currentColor"
                        ></path>
                      </svg>
                    </span>
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();
  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && (
          <div className="flex gap-2">
            <img
              src={sessionData.user?.image || ""}
              className="w-8"
              alt="user avatar"
            />
            <span>{sessionData.user?.name}</span>
          </div>
        )}
      </p>
      <button
        type="button"
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
